{
	// ===============================================================
	// [ 1 ] ---- Basic Vue Component Starter ---- *TAKEN FROM PROJECT
	// ===============================================================
	"basic template for vue component": {
		"prefix": "vue-comp-raw",
		"body": [
			"<scrip setup>",
			"  ${3:}",
			"</script>",
			"",
			"<template>",
			"  ${1:}",
			"</template>",
			"",
			"<style scoped>",
			"  ${2:}",
			"</style>"
		],
		"description": "basic template for vue component"
	},
	// ===================================================================
	// [ 2 ] ---- Vue Component with Props ---- *TAKEN FROM GITHUB COPILOT
	// ===================================================================
	"basic template for vue component with props": {
		"prefix": "vue-comp-props",
		"body": [
			"import { defineProps } from 'vue'",
			"",
			"const props = defineProps({",
			"  prop1: {",
			"    type: String,",
			"    required: true",
			"  },",
			"})"
		],
		"description": "basic template for vue component with props"
	},
	// =====================================================================================
	// [ 3 ] ---- Vue Component Starter with props and emits ---- *TAKEN FROM GITHUB COPILOT
	// =====================================================================================
	"basic template for vue component with props and emits": {
		"prefix": "vue-comp-props-emits",
		"body": [
			"import { defineProps, defineEmits } from 'vue'",
			"",
			"const props = defineProps({",
			"  prop1: {",
			"    type: String,",
			"    required: true",
			"  },",
			"  prop2: {",
			"    type: Number,",
			"    default: 0",
			"  }",
			"})",
			"",
			"const emits = defineEmits([",
			"  'event1',",
			"  'event2'",
			"])"
		],
		"description": "basic template for vue component with props and emits"
	},
	// ==================================================================================
	// [ 4 ] ---- V-If ( Conditional Rendering ) ---- *TAKEN FROM GITHUB COPILOT + edited
	// ==================================================================================
	"conditional rendering": {
		"prefix": "vue-if",
		"body": [
			"<div id=\"${1:app}\" class=\"${2:class-name}\">",
			"  <p v-if=\"${3:condition}\">${4:This is visible}</p>",
			"  <p v-else>${4:This is hidden}</p>",
			"</div>"
		],
		"description": "conditional rendering"
	},
	// ===============================================
	// [ 5 ] ---- Vue-Else-If ---- *TAKEN FROM PROJECT
	// ===============================================
	"Vue else if": {
		"prefix": "vue-else-if",
		"body": [
			"<div v-else-if=\"${1:slice.component == 'ContentPairsRepeater'}\">",
			"  ${1:<imgSlider :sliderCont=\"slice.bricks\" />}",
			"</div>"
		],
		"description": "Vue else if"
	},
	// =========================================================
	// [ 6 ] ---- Vue-If-Else-If ---- *TAKEN FROM GITHUB COPILOT
	// =========================================================
	"conditional rendering with v-else-if": {
		"prefix": "vue-if-else-if",
		"body": [
			"<div id=\"${1:app}\" class=\"${2:class-name}\">",
			"  <p v-if=\"${3:condition}\">${4:This is visible}</p>",
			"  <p v-else-if=\"${5:condition}\">$This is also visible</p>",
			"  <p v-else>This is hidden</p>",
			"</div>"
		],
		"description": "conditional rendering with v-else-if"
	},
	// =======================================================================================
	// [ 7 ] ---- V-Show ( Conditional rendering with V-Show ) ---- *TAKEN FROM GITHUB COPILOT
	// =======================================================================================
	"conditional rendering with v-show": {
		"prefix": "vue-show",
		"body": [
			"<div id=\"app\">",
			"  <p v-show=\"showMessage\">This is visible</p>",
			"  <p v-show=\"showMessage2\">This is also visible</p>",
			"  <p v-show=\"showMessage3\">This is also visible</p>",
			"</div>"
		],
		"description": "conditional rendering with v-show"
	},
	// =============================================================
	// [ 8 ] ---- V-for ( for loop ) ---- *TAKEN FROM GITHUB COPILOT
	// =============================================================
	"for loop in vue": {
		"prefix": "vue-for",
		"body": [
			"<li v-for=\"(${1:item}, index) in ${2:items}\" key=\"index\">",
			" ${3:{item}}",
			"</li>"
		],
		"description": "for loop in vue"
	},
	// =========================================================
	// [ 9 ] ---- Vue Component Starter ---- *TAKEN FROM PROJECT
	// =========================================================
	"vue component starter template": {
		"prefix": "vue-comp-starter",
		"body": [
			"<script setup>",
			"</script>",
			"",
			"<template>",
			"<div class=\"container\">",
			"  <div class=\"inner-container\">",
			"    <div class=\"content\">",
			"      <div class=\"content-block\">",
			"        ${1:}",
			"      </div>",
			"    </div>",
			"  </div>",
			"</div>",
			"</template>",
			"",
			"<style scoped>",
			"</style>"
		],
		"description": "vue component starter template"
	}
}